---
- name: Update APT packages
  apt:
    update_cache: yes
  become: yes

- name: Install APT Transport HTTPS
  apt:
    name: apt-transport-https
    state: latest
  become: yes

- name: Add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: yes

- name: Add Kubernetes APT repository
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'
  become: yes

- name: Add Docker apt-key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present
  become: yes

- name: Install required packages
  apt:
    name: "{{ item }}"
    state: latest
  loop:
    - software-properties-common
    - ca-certificates
    - kubelet
    - kubeadm
    - kubectl
    - docker-ce
    - docker-ce-cli
    - kubernetes-cni 
    - bridge-utils
  become: yes

- name: Disable swap
  command: swapoff -a
  become: yes

- name: Create required directories
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
  become: yes

- name: Configure sysctl
  copy:
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    dest: /etc/docker/daemon.json
  become: yes

- name: Add vagrant user to docker group
  user:
    name: vagrant
    group: docker
  become: yes
  
- name: Restart docker service
  service:
    name: docker
    daemon_reload: yes
    state: restarted
  become: yes

- name: Enable docker service
  service:
    name: docker
    enabled: yes
  become: yes

- name: Delete docker0 bridge
  shell: "{{ item }}"
  with_items:
    - ip link set docker0 down
    - ip link delete docker0
  become: yes

- name: Generate cat command
  command: "cat /vagrant/configs/hosts"
  register: cat_command

- name: If endpoint address is not in DNS, add record to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ item }}"
    state: present
  with_items: "{{ cat_command.stdout_lines }}"
  become: yes

- name: Restart kubelet service
  service:
    name: kubelet
    daemon_reload: yes
    state: restarted
  become: yes

- name: Enable kubelet service
  service:
    name: kubelet
    enabled: yes
  become: yes
